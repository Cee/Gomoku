package gomoku.gamepanel;
import gomoku.achievement.PlayTimes;
import gomoku.constants.Constants;
import gomoku.language.Language;
import gomoku.player.HumanPlayer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/**
 * 
 * @author luck
 *@version 2013.3.31.23:07
 */
public class DoubleGamePanel extends GamePanel {
	private static final long serialVersionUID = 1L;	
	
	public DoubleGamePanel() {
		jbtExit.addActionListener(new ExitListener());
		jbtStart.addActionListener(new StartListener());
		jbtRetract.addActionListener(new RetractListener());
		jbtGiveup.addActionListener(new GiveupListener());
		jbtReview.addActionListener(new ReviewListener());
		jbtReturn.addActionListener(new ReturnListener());
		jbtNext.addActionListener(new NextListener());
		jbtLast.addActionListener(new LastListener());
		jbtAnimation.addActionListener(new AnimationListener());
		guiboard.player1 = new HumanPlayer("humanplayer1");
		guiboard.player2 = new HumanPlayer("humanplayer2");
		guiboard.Single=false;
	}
	class StartListener implements ActionListener {
		public void actionPerformed (ActionEvent event ){
			PlayTimes.addPlayTimes();
			guiboard.isWin=true;
			whofirst=0;
			firstplayer=1;
			jlbPlayer1.setText("");
			jlbPlayer2.setText("");
			jbtGiveup.setEnabled(true);
			jbtRetract.setEnabled(true);
			jbtReview.setEnabled(false);
			guiboard.isOK=false;
			guiboard.renew();
			guiboard.AddListener();
			new TimeThread().start();
			rule();			
		}	
		
		public void rule() {		
			String[] Players = {guiboard.player1.getName(),guiboard.player2.getName()}; 	
			String select = guiboard.player1.choosefirst(Players);
			if (select.equals(guiboard.player2.getName())){
				firstplayer = 2;
				guiboard.changeplayer();
				
			}
			new RuleThread().start();			
		}
		
		
		/**
		 * 
		 * @author luck
		 * @version 2013.4.2 15:18
		 * 用于执行规则的线程
		 * 以及判断按钮的是否有效
		 */
		class RuleThread extends Thread {
			public void run() {
			while (guiboard.step <= 3) {
				try {
					sleep(100);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			guiboard.changeplayer();
			selectSwap = (firstplayer ==2?guiboard.player1:guiboard.player2).choose();
			if (selectSwap.equals(Language.CHOOSEWHITE)){
				color_of_Player1= firstplayer==1?Constants.BLACK:Constants.WHITE;
				color_of_Player2= firstplayer==1?Constants.WHITE:Constants.BLACK;
				firstplayer = firstplayer==1?2:1;
			}else if (selectSwap.equals(Language.DOMORE)) {
				while (guiboard.step<=5){
					try {
						sleep(100);
					} catch (InterruptedException e) {
						e.printStackTrace();
					  }
				}
				guiboard.changeplayer();
				selectSwap = (firstplayer ==1?guiboard.player1:guiboard.player2).chooseagain();
				if (selectSwap == Language.CHOOSEBLACK) {
					color_of_Player1= firstplayer==1?Constants.BLACK:Constants.WHITE;
					color_of_Player2= firstplayer==1?Constants.WHITE:Constants.BLACK;
					firstplayer = firstplayer==1?2:1;			
					guiboard.changeplayer();
				} 
			 } else {
				 color_of_Player1= firstplayer==2?Constants.BLACK:Constants.WHITE;
				color_of_Player2= firstplayer==2?Constants.WHITE:Constants.BLACK;
				 guiboard.changeplayer();
			 }
			jlbPlayer1.setText(color_of_Player1==Constants.BLACK?"黑方":"白方");
			jlbPlayer2.setText(color_of_Player1==Constants.WHITE?"黑方":"白方");

			guiboard.isOK=true;
			
			new RemindThread().start();
			while (!guiboard.isWin){
				try {
					sleep(100);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
			jbtReview.setEnabled(true);
			jbtRetract.setEnabled(false);
			jbtGiveup.setEnabled(false);
			}
		}
	}
}	


